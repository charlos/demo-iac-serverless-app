name: Deploy Infrastructure

on:
  push:
    branches:
      - main # Trigger only on merge to main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production # Requires manual approval

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Export environment variables
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "ACCOUNT_ID=${{ secrets.ACCOUNT_ID }}" >> $GITHUB_ENV

      - name: Install Terraform
        run: |
          curl -fsSL https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip -o terraform.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Install Terragrunt
        run: |
          curl -L https://github.com/gruntwork-io/terragrunt/releases/download/v0.67.8/terragrunt_linux_amd64 -o terragrunt
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/
          terragrunt -version

      - name: Terragrunt Init & Validate
        working-directory: infrastructure/prod
        run: |
          terragrunt run-all init -input=false --terragrunt-ignore-dependency-errors
          terragrunt run-all validate

      # - name: Terragrunt Plan
      #   working-directory: infrastructure/prod
      #   run: terragrunt run-all plan --terragrunt-non-interactive

      - name: Terragrunt Apply
        working-directory: infrastructure/prod
        run: terragrunt run-all apply --terragrunt-non-interactive -auto-approve
